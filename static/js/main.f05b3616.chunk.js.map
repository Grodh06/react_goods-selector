{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","goods","this","className","length","slice","join","type","onClick","setState","map","good","includes","prevState","filter","item","concat","Component","ReactDOM","render","document","getElementById"],"mappings":"qOAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAyB,CACvBC,aAAc,CAAC,Q,4CAGjB,WAAU,IAEaC,EAFd,OACCD,EAAiBE,KAAKH,MAAtBC,aAUR,OACE,qBAAKG,UAAU,cAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,eAAd,SACIH,EAAaI,QAdJH,EAeMD,EAdrBC,EAAMG,OAAS,EACX,GAAN,OAAUH,EAAMI,MAAM,GAAI,GACvBC,KAAK,MADR,gBACqBL,EAAMA,EAAMG,OAAS,GAD1C,iBAII,GAAN,OAAUJ,EAAaM,KAAK,MAA5B,iBAUa,wBAEJN,EAAaI,QACd,wBACEG,KAAK,SACLJ,UAAU,oBACVK,QAAS,kBAAM,EAAKC,SAAS,CAAET,aAAc,MAH/C,sBASJ,oBAAIG,UAAU,UAAd,SACGN,EAAgBa,KAAI,SAAAC,GAAI,OACvB,qBACER,UAAU,2BADZ,UAIE,mBAAGA,UAAU,eAAb,SAA6BQ,IAC3BX,EAAaY,SAASD,GAkBpB,wBACER,UAAU,mBACVI,KAAK,SACLC,QAAS,WACP,EAAKC,UAAS,SAACI,GACb,MAAO,CACLb,aAAca,EAAUb,aACrBc,QAAO,SAAAC,GAAI,OAAIA,IAASJ,UAPnC,oBAhBA,wBACER,UAAU,oBACVI,KAAK,SACLC,QAAS,WACP,EAAKC,UAAS,SAACI,GACb,MAAO,CACLb,aAAca,EAAUb,aACrBgB,OAAO,CAACL,SAPnB,sBALCA,iB,GAvCHM,aAoFHnB,ICrGfoB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f05b3616.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string[]\n};\n\nclass App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: ['Jam'],\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n    const goodOrGoods = (goods:string[]) => {\n      if (goods.length > 1) {\n        return `${goods.slice(0, -1)\n          .join(', ')} and ${goods[goods.length - 1]} are selected`;\n      }\n\n      return `${selectedGood.join(', ')} is selected`;\n    };\n\n    return (\n      <div className=\"App content\">\n        <div className=\"content__container\">\n          <div className=\"head\">\n            <h2 className=\"head__tittle\">\n              { selectedGood.length\n                ? (goodOrGoods(selectedGood))\n                : ('No goods selected')}\n            </h2>\n            {!!selectedGood.length && (\n              <button\n                type=\"button\"\n                className=\"button is-warning\"\n                onClick={() => this.setState({ selectedGood: [] })}\n              >\n                Clear\n              </button>\n            )}\n          </div>\n          <ul className=\"content\">\n            {goodsFromServer.map(good => (\n              <li\n                className=\"message level list__item\"\n                key={good}\n              >\n                <p className=\"list__tittle\">{good}</p>\n                {!selectedGood.includes(good)\n                  ? (\n                    <button\n                      className=\"button is-success\"\n                      type=\"button\"\n                      onClick={() => {\n                        this.setState((prevState) => {\n                          return {\n                            selectedGood: prevState.selectedGood\n                              .concat([good]),\n                          };\n                        });\n                      }}\n                    >\n                      Select\n                    </button>\n                  )\n                  : (\n                    <button\n                      className=\"button is-danger\"\n                      type=\"button\"\n                      onClick={() => {\n                        this.setState((prevState) => {\n                          return {\n                            selectedGood: prevState.selectedGood\n                              .filter(item => item !== good),\n                          };\n                        });\n                      }}\n                    >\n                      Remove\n                    </button>\n                  )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}